/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@use 'sass:map';
@use '@angular/material' as mat;
@use '../../../../../../assets/utils.scss' as utils;

@mixin generate-theme($material-theme, $nifi-theme) {
    // Get the color config from the theme.
    $material-theme-color-config: mat.get-color-config($material-theme);
    $nifi-theme-color-config: mat.get-color-config($nifi-theme);

    // Get the color palette from the color-config.
    $material-theme-primary-palette: map.get($material-theme-color-config, 'primary');
    $nifi-theme-surface-palette: map.get($nifi-theme-color-config, 'primary');

    // Get hues from palette
    $material-theme-primary-palette-lighter: mat.get-color-from-palette($material-theme-primary-palette, lighter);
    $material-theme-primary-palette-default: mat.get-color-from-palette($material-theme-primary-palette, default);
    $nifi-theme-surface-palette-400-contrast: mat.get-color-from-palette($nifi-theme-surface-palette, '400-contrast');
    $nifi-theme-surface-palette-default: mat.get-color-from-palette($nifi-theme-surface-palette, default);
    $surface: utils.get-surface($nifi-theme-color-config);
    $on-surface: utils.get-on-surface($nifi-theme-color-config);

    .property-editor {
        @include mat.button-density(-1);

        .nf-editor {
            .CodeMirror {
                background-color: $surface;

                &.blank {
                    background: $material-theme-primary-palette-default;
                    color: $material-theme-primary-palette-lighter;
                }
            }

            .CodeMirror-code {
                color: $on-surface;
            }

            /*
                Override some defaults...
            */

            .cm-s-default .CodeMirror-matchingbracket {
                color: $nifi-theme-surface-palette-400-contrast !important;
                background-color: $nifi-theme-surface-palette-default;
            }
        }
    }
}
